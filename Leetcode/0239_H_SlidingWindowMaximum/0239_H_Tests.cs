namespace L0239;

public class Test {
    private Solution solution = new();
    private Solution2 solution2 = new();

    [Fact]
    public void SanityTest() {
        MainTest(new int[] { 1, 3, -1, -3, 5, 3, 6, 7 }, 3, new int[] { 3, 3, 5, 5, 6, 7 });
        MainTest(new int[] { 1 }, 1, new int[] { 1 });
        MainTest(new int[] { 5, 2, 3, 1, 1 }, 3, new int[] { 5, 3, 3 });
    }

    [Fact]
    public void SanityTest2() {
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 1, new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 2, new int[] { 3, 3, 5, 5, 4, 3, 5, 6, 6, 5, 5, 5, 2, 1, 2, 3, 5, 5, 6, 6, 4, 5, 5, 3, 3, 1, 2, 2, 2, 2, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 3, new int[] { 3, 5, 5, 5, 4, 5, 6, 6, 6, 5, 5, 5, 2, 2, 3, 5, 5, 6, 6, 6, 5, 5, 5, 3, 3, 2, 2, 2, 2, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 4, new int[] { 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 2, 3, 5, 5, 6, 6, 6, 6, 5, 5, 5, 3, 3, 2, 2, 2, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 5, new int[] { 5, 5, 5, 5, 6, 6, 6, 6, 6, 5, 5, 5, 3, 5, 5, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 2, 2, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 6, new int[] { 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 2, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 7, new int[] { 5, 5, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 3, 3, 4 });
        MainTest(new int[] { 2, 3, 1, 5, 4, 2, 3, 5, 6, 5, 4, 5, 2, 1, 1, 2, 3, 5, 5, 6, 4, 1, 5, 2, 3, 1, 1, 2, 1, 2, 1, 3, 2, 4 }, 8, new int[] { 5, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 3, 4 });
    }

    private void MainTest(int[] nums, int k, int[] correct) {
        Assert.Equal(correct, solution.MaxSlidingWindow(nums, k));
        Assert.Equal(correct, solution2.MaxSlidingWindow(nums, k));
    }
}